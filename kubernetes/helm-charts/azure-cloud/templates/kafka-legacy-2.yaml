# Licensed to IzzyAcademy.com under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# IzzyAcademy.com licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
{{- if .Values.legacy.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: broker2
  namespace: "{{ .Values.infrastructure.namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: broker2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: broker2
    spec:
      containers:
      - image: "izzyacademy/kafka:3.0.0"
        name: broker2
        resources:
          requests:
            memory: {{ .Values.broker.brokerMemory }}
            cpu: {{ .Values.broker.brokerCPU }}
          limits:
            memory: {{ .Values.broker.brokerMemory }}
            cpu: {{ .Values.broker.brokerCPU }}
        env:
        - name: KAFKA_BROKER_ID
          value: "2"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: {{ .Values.zookeeper.connect }}
        - name: "KAFKA_LISTENERS"
          value: {{ .Values.legacy.listeners }}
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: {{ .Values.legacy.protocolMap }}
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "LISTENER_ALPHA://broker2-internal:9092,LISTENER_BETA://broker2.{{ .Values.legacy.domainSuffix }}:9093"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value:  {{ .Values.legacy.interBrokerListenerName }}
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "3"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "2"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "3"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "3000"
        - name: KAFKA_JMX_PORT
          value: "9101"
        - name: KAFKA_HEAP_OPTS
          value: {{ .Values.broker.brokerHeap }}
        ports:
        - containerPort: 9092
          name: primary
        - containerPort: 9093
          name: secondary
        - containerPort: 9101
          name: jmxport
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: {{ .Values.broker.failureThreshold }}
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 15
          failureThreshold: {{ .Values.broker.failureThreshold }}
          periodSeconds: 15
        volumeMounts:
        - name: "broker2-volume"
          mountPath: /var/lib/kafka
      volumes:
      - name: "broker2-volume"
        persistentVolumeClaim:
          claimName: "broker2-persistent-storage"

---
# This is the internal load balancer
apiVersion: v1
kind: Service
metadata:
  name: "broker2-internal"
  namespace: "{{ .Values.infrastructure.namespace }}"
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: "ClusterIP"
  ports:
  - port: 9092
    protocol: TCP
    name: a
  - port: 9093
    protocol: TCP
    name: b
  selector:
    app: broker2

---
# This is the external load balancer
apiVersion: v1
kind: Service
metadata:
  name: "broker2-external"
  namespace: "{{ .Values.infrastructure.namespace }}"
spec:
  type: "NodePort" # Kubernetes will find something between 30000-32767
  ports:
  - port: 9092
    protocol: TCP
    name: a
  - port: 9093
    protocol: TCP
    name: b
  selector:
    app: broker2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "broker2-persistent-storage"
  namespace: "{{ .Values.infrastructure.namespace }}"
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: {{ .Values.infrastructure.storageClass }}
  resources:
    requests:
      storage: 5Gi

{{- end }}